paths:
  /user/registerUser:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input

  /user/login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Successful login
        '401':
          description: Invalid credentials

  /user/getAllUsers:
    get:
      summary: Get all users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of users
        '500':
          description: Server error

components:
  schemas:
    UserRegister:
      type: object
      required:
        - name
        - email
        - password
        - mobileNumber
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        mobileNumber:
          type: string
        role:
          type: string
          enum: [admin, user]

    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT